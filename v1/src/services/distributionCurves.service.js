const { bulkInsert } = require('./outputVolume.service');

const _context = {
  outputPolyhedrons: require('../models/outputPolyhedron.model'),
  outputMaxQs: require('../models/outputMaxQ.model'),
  outputVolumes: require('../models/outputVolume.model'),
};

const Sources = {
  VolumeTheoric: 'volumeTheoric',
  VolumeQuarry: 'volumeQuarry',
  TotalVolumeOfMaxQs: 'totalVolumeOfMaxQs',
};

const Charts = {
  Histogram: 'histogram',
  Cdf: 'cdf',
  Pdf: 'pdf',
};

const preprocessData = async (rpId) => {
  const outputPolyhedrons = await _context.outputPolyhedrons
    .find({
      rpId: rpId,
      volumeTheoric: { $gte: 1 },
      volumeQuarry: { $gte: 1 },
    })
    .exec();

  const result = outputPolyhedrons.map(async (polyhedron) => {
    const maxQs = await _context.outputMaxQs.find({
      rpId: rpId,
      polyhedronId: polyhedron.polyhedronId,
      volumeOfMaxQ: { $gte: 1 }, // TODO: check if this is correct
    });
    const outputVolume = {
      rpId,
      polyhedronId: polyhedron.polyhedronId,
      volumeTheoric: polyhedron.volumeTheoric,
      volumeQuarry: polyhedron.volumeQuarry,
      totalVolumeOfMaxQs: maxQs.reduce(
        (acc, curr) => acc + curr.volumeOfMaxQ,
        0
      ),
    };
    if (outputVolume.totalVolumeOfMaxQs < 1) return null;
    return outputVolume;
  });

  return await Promise.all(result);
};

const createOutputVolumes = async (rpId) => {
  const preprocessedData = (await preprocessData(rpId)).filter((p) => p);
  const insertResult = await bulkInsert(preprocessedData);
  return insertResult;
};

const calculateDistributionCurves = async (
  rpOutputVolumes,
  sourceList,
  chartList
) => {
  const result = {};
  for (let i = 0; i < sourceList.length; i++) {
    const source = sourceList[i];
    Sources[source] = {};
    for (let j = 0; j < chartList.length; j++) {
      const chart = chartList[j];
      Sources[source][chart] = calculateByChart(
        rpOutputVolumes.map((p) => p[source]),
        chart
      );
    }
    result[source] = Sources[source];
  }
  return result;
};

const calculateByChart = async (source, chart) => {
  switch (chart) {
    case Charts.Histogram:
      return calculateHistogram(source);
    case Charts.Cdf:
      return calculateCdf(source);
    case Charts.Pdf:
      return calculatePdf(source);
  }
};

const calculateHistogram = (source) => {
  source = data3; // TODO: remove this f*cking line
  source = source.sort((a, b) => a - b);
  let numberOfClasses = parseFloat(
      (1 + 3.3 * Math.log10(source.length)).toFixed(3)
    ),
    distributionWidth = parseFloat(source.at(source.length - 1) - source.at(0)),
    classRange = parseFloat(
      ((distributionWidth + 1) / numberOfClasses).toFixed(3)
    );

  console.log(numberOfClasses, distributionWidth, classRange, source.length);

  const classes = [];

  let min = source[0];
  for (let i = 0; i < numberOfClasses; i++) {
    const limits = {
      lowerBound: min,
      upperBound: min + classRange,
    };
    limits.frequency = source.filter(
      (value) => value >= limits.lowerBound && value < limits.upperBound
    ).length;
    limits.cumulativeFrequency =
      i === 0
        ? limits.frequency
        : classes[i - 1].cumulativeFrequency + limits.frequency;
    limits.mean = (limits.lowerBound + limits.upperBound) / 2;
    classes.push(limits);
    min = limits.upperBound;
  }
  console.log(classes);
  const histogram = {
    x: [],
    y: [],
  };
  return histogram;
};

const calculateCdf = (source) => {
  const cdf = {
    x: [],
    y: [],
  };
  return cdf;
};

const calculatePdf = (source) => {
  const pdf = {
    x: [],
    y: [],
  };
  return pdf;
};

module.exports = {
  createOutputVolumes,
  calculateDistributionCurves,
  Sources,
  Charts,
};

//#region fake data

// const Mongoose = require('mongoose');
// const rpIdObject = new Mongoose.Types.ObjectId(rpId);
// await _context.outputMaxQs.insertMany(
//   outputMaxQs.map((p) => ({ ...p, rpId: rpIdObject }))
// );

const outputPolyhedrons = [
  {
    polyhedronId: 1,
    volumeTheoric: 87.34014893,
    vertexCount: 8,
    faceCount: 6,
    objFileName: 'Path+Filename.obj',
    plyFileName: 'Path+Filename.ply',
    volumeQuarry: 25.854,
  },
  {
    polyhedronId: 2,
    volumeTheoric: 10.1461525,
    vertexCount: 8,
    faceCount: 6,
    objFileName: 'Path+Filename.obj',
    plyFileName: 'Path+Filename.ply',
    volumeQuarry: 4.25684,
  },
  {
    polyhedronId: 3,
    volumeTheoric: 154.48657,
    vertexCount: 6,
    faceCount: 5,
    objFileName: 'Path+Filename.obj',
    plyFileName: 'Path+Filename.ply',
    volumeQuarry: 45.2154,
  },
  {
    polyhedronId: 4,
    volumeTheoric: 68.24587,
    vertexCount: 10,
    faceCount: 7,
    objFileName: 'Path+Filename.obj',
    plyFileName: 'Path+Filename.ply',
    volumeQuarry: 16.2548,
  },
];

const outputMaxQs = [
  {
    polyhedronId: 1,
    maxQId: 1,
    volumeOfMaxQ: 65,
    maxQFirstVertexId: 1,
    maxQLastVertexId: 2,
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
  {
    polyhedronId: 1,
    maxQId: 2,
    volumeOfMaxQ: '',
    maxQFirstVertexId: 3,
    maxQLastVertexId: 4,
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
  {
    polyhedronId: 1,
    maxQId: 3,
    volumeOfMaxQ: '',
    maxQFirstVertexId: '',
    maxQLastVertexId: '',
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
  {
    polyhedronId: 2,
    maxQId: 1,
    volumeOfMaxQ: 9.7,
    maxQFirstVertexId: 1,
    maxQLastVertexId: 2,
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
  {
    polyhedronId: '',
    maxQId: 2,
    volumeOfMaxQ: '',
    maxQFirstVertexId: '',
    maxQLastVertexId: '',
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
  {
    polyhedronId: 3,
    maxQId: 3,
    volumeOfMaxQ: 0,
    maxQFirstVertexId: 1,
    maxQLastVertexId: 2,
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
  {
    polyhedronId: 4,
    maxQId: 1,
    volumeOfMaxQ: 0,
    maxQFirstVertexId: 1,
    maxQLastVertexId: 2,
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
  {
    polyhedronId: 4,
    maxQId: 2,
    volumeOfMaxQ: 0,
    maxQFirstVertexId: 3,
    maxQLastVertexId: 4,
    rotationAngleX: 0,
    rotationAngleY: 0,
    rotationAngleZ: 0,
  },
];

const data = [
  4.45, 4.6, 5.8, 5.8, 5.9, 6, 6.1, 6.2, 6.5, 6.6, 6.8, 7.4, 7.5, 7.8, 7.9, 8,
  8.6, 8.7, 8.8, 9.1, 9.2, 9.5, 9.5, 9.7, 9.9, 10, 10, 11, 11, 11, 12, 12, 12,
  12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14,
  15, 15, 15, 15, 15, 15, 15.8,
];

const data2 = [
  1.04409e-7, 9.68525e-5, 0.00050012, 0.001231784, 0.001372719, 0.008576143,
  0.009157799, 0.06882461, 0.069997737, 0.09600933, 0.101657615, 0.118173366,
  0.148722476, 0.169949475, 0.235169879, 0.264177994, 0.339877239, 0.391493083,
  0.392621636, 0.478974445, 0.481714764, 0.537831827, 0.858419751, 1.123066453,
  1.247590053, 1.299810094, 1.704785007, 1.983130077, 2.072307141, 2.109990607,
  2.753991514, 3.33891248, 3.567943441, 3.693118446, 4.127515743, 4.568755032,
  4.909111208, 5.808131604, 5.834655833, 6.28723539, 7.214648262, 7.544420001,
  7.806003067, 8.06754921, 9.829779886, 11.40606207, 11.54681379, 11.59321466,
  11.68771163, 11.71980827, 12.34717512, 12.64849031, 14.02387644, 14.1888296,
  14.78785035, 15.24595789, 15.69081785, 16.3797963, 16.64715386, 18.1615392,
  18.85021459, 19.75849605, 19.94300259, 20.34192816, 20.99194058, 21.76998037,
  22.31586143, 24.72294658, 25.38887993, 26.09906528, 27.63270585, 29.06761805,
  29.31519255, 31.72167786, 33.86194922, 34.35095013, 34.56347682, 35.12669372,
  39.35528666, 39.44985196, 40.61155582, 48.27677917, 48.3992181, 50.58953854,
  50.77302852, 52.25005317, 52.45529106, 52.52319465, 54.36421602, 56.57604167,
  59.25447728, 64.15910062, 66.62215843, 71.55082341, 74.17712624, 74.26604474,
  75.15868178, 77.12851879, 78.99436066, 80.54042933, 87.76058255, 89.07500029,
  90.63117052, 90.74192326, 92.28996398, 93.5296667, 94.23137615, 97.94269436,
  98.47451757, 98.71694461, 106.7191957, 109.9096312, 111.2813174, 111.5952695,
  123.9739898, 127.0586186, 129.273424, 130.5500818, 130.5887462, 135.0115932,
  136.1548074, 139.4756962, 141.2274446, 145.7177087, 148.6749588, 154.8000861,
  155.8641757, 158.3382634, 158.8180221, 160.8095233, 164.2056463, 169.2441322,
  174.8961225, 186.501459, 191.0393058, 196.1591155, 197.61033, 201.7890735,
  211.54436, 213.0627667, 218.1351494, 220.480636, 223.4311377, 228.1753462,
  234.0276739, 235.8887113, 241.7400961, 269.7983299, 282.9459874, 303.5270129,
  312.8962119, 318.9373056, 319.2321219, 356.2316045, 364.0994599, 370.9916579,
  375.9534059, 410.1247349, 425.0249924, 427.8272098, 431.6768498, 471.7635694,
  476.4899483,
];

const data3 = [
  1.55683e-9, 6.69533e-9, 3.2792e-8, 4.62479e-8, 7.80126e-8, 2.01242e-7,
  7.88763e-7, 8.64062e-7, 2.28866e-6, 6.46887e-6, 6.91921e-6, 6.94749e-6,
  7.62804e-6, 8.7852e-6, 9.57758e-6, 9.57758e-6, 1.1374e-5, 1.15991e-5,
  1.16173e-5, 1.65277e-5, 1.67437e-5, 1.81807e-5, 2.37802e-5, 2.73241e-5,
  4.61632e-5, 4.63673e-5, 5.59339e-5, 5.81462e-5, 5.95167e-5, 7.98821e-5,
  8.6785e-5, 8.94685e-5, 0.00010374, 0.000106539, 0.000112645, 0.000113141,
  0.0001708, 0.00017177, 0.000194985, 0.000215947, 0.000272563, 0.000281704,
  0.000378407, 0.000378744, 0.000409492, 0.000424117, 0.000434176, 0.000466995,
  0.000483671, 0.000496834, 0.000566343, 0.00059459, 0.000603626, 0.000678611,
  0.000722616, 0.000739104, 0.000740081, 0.000745237, 0.000748832, 0.000756595,
  0.000813974, 0.000814746, 0.000962302, 0.000994754, 0.001007261, 0.001020479,
  0.001125677, 0.001182812, 0.001187207, 0.001195298, 0.001199484, 0.001204747,
  0.001220651, 0.001226203, 0.001387444, 0.001449902, 0.001464761, 0.001505097,
  0.001542807, 0.001638945, 0.001655367, 0.001683558, 0.001857292, 0.001865343,
  0.001938895, 0.002110221, 0.002170044, 0.002316911, 0.002337573, 0.002407725,
  0.002461803, 0.002513005, 0.002513005, 0.002600993, 0.002638636, 0.002672456,
  0.002698454, 0.002708963, 0.002841354, 0.003040734, 0.003045759, 0.003274653,
  0.003479673, 0.003571073, 0.004010904, 0.004081549, 0.004166701, 0.004299204,
  0.004333513, 0.004368479, 0.004540579, 0.004572929, 0.004698664, 0.004782624,
  0.004836402, 0.004970901, 0.004987752, 0.005080582, 0.005183325, 0.005624626,
  0.005775152, 0.005886536, 0.006067972, 0.006176826, 0.007087623, 0.007203002,
  0.007249644, 0.008149611, 0.008294295, 0.00856433, 0.008816824, 0.008834567,
  0.009046942, 0.00924366, 0.009468011, 0.009594894, 0.009755161, 0.010034494,
  0.010181707, 0.010215307, 0.010306272, 0.0103487, 0.010399673, 0.01082781,
  0.011506703, 0.011676269, 0.012096368, 0.012199522, 0.012880785, 0.013116371,
  0.013158494, 0.013158494, 0.01316034, 0.013733524, 0.013744137, 0.01407414,
  0.014078123, 0.014078123, 0.014361119, 0.01452692, 0.014535661, 0.014616002,
  0.014901484, 0.015505968, 0.015787954, 0.015841735, 0.01605319, 0.016169621,
  0.016431074, 0.017246384, 0.017567604, 0.017863964, 0.017975301, 0.018365863,
  0.018445654, 0.018816349, 0.019374989, 0.020154958, 0.020223712, 0.020230706,
  0.020329786, 0.020413934, 0.020413934, 0.020445832, 0.020641331, 0.021512313,
  0.021793868, 0.022254476, 0.022498817, 0.022963048, 0.023114335, 0.0234828,
  0.023532753, 0.024284454, 0.02505457, 0.025120131, 0.025322096, 0.026074909,
  0.026086537, 0.026086537, 0.026184848, 0.026488692, 0.02658279, 0.02671079,
  0.026734729, 0.027744534, 0.027951254, 0.028906006, 0.028950285, 0.029215983,
  0.030333882, 0.030544599, 0.030573201, 0.030639857, 0.030655648, 0.031394882,
  0.031541624, 0.032130428, 0.032132801, 0.032344148, 0.033239612, 0.03353259,
  0.034250491, 0.03446034, 0.035560035, 0.0357838, 0.0357838, 0.035965891,
  0.036925101, 0.037913904, 0.038091698, 0.038179944, 0.038179944, 0.038315614,
  0.038576292, 0.038722756, 0.038796895, 0.038930852, 0.040034038, 0.040306985,
  0.040370855, 0.040651178, 0.041416568, 0.041880746, 0.04220008, 0.042264327,
  0.042690904, 0.042910815, 0.043035316, 0.043046839, 0.043418475, 0.043654488,
  0.043757973, 0.043827788, 0.043978988, 0.044081965, 0.044109375, 0.044286316,
  0.044291883, 0.045374215, 0.045435528, 0.045819665, 0.045959624, 0.045970245,
  0.048763485, 0.049120139, 0.049191573, 0.049236487, 0.049762797, 0.050133379,
  0.051010271, 0.051597669, 0.052624403, 0.052672098, 0.05275255, 0.053419253,
  0.054398773, 0.055064551, 0.055471516, 0.055612976, 0.055644404, 0.056509077,
  0.056723555, 0.056876433, 0.058434005, 0.058516425, 0.058929465, 0.060224801,
  0.060447711, 0.060512613, 0.060525629, 0.060542122, 0.060620653, 0.060685522,
  0.061123133, 0.061236452, 0.061667572, 0.062692618, 0.064057675, 0.064288921,
  0.064292935, 0.064669098, 0.065048142, 0.065258619, 0.065451803, 0.065497978,
  0.065568458, 0.066205755, 0.067436189, 0.067436189, 0.068363989, 0.070021781,
  0.07108019, 0.07122074, 0.071325402, 0.071746965, 0.072782743, 0.073279415,
  0.074033566, 0.074269339, 0.07467268, 0.075031975, 0.076447134, 0.077122734,
  0.07798251, 0.080492888, 0.080693457, 0.0810326, 0.081251135, 0.081411709,
  0.082208415, 0.082268284, 0.082507064, 0.083399463, 0.08362074, 0.083800782,
  0.085193091, 0.085870477, 0.086905659, 0.087131158, 0.087629108, 0.088380431,
  0.088752378, 0.089697572, 0.090843026, 0.091648867, 0.091879564, 0.09214289,
  0.093353274, 0.093353274, 0.094460452, 0.095026709, 0.095147946, 0.096955752,
  0.098537463, 0.098537463, 0.099114362, 0.100623487, 0.101127851, 0.103816655,
  0.106795182, 0.10682123, 0.107003114, 0.107514377, 0.107672646, 0.107754233,
  0.108046098, 0.108046098, 0.10804865, 0.108260693, 0.109290134, 0.110642921,
  0.111608809, 0.112131269, 0.114301567, 0.114784755, 0.116149089, 0.117312817,
  0.118152213, 0.118202467, 0.119475487, 0.12150843, 0.122279563, 0.122692364,
  0.124875552, 0.126926579, 0.127242963, 0.127704606, 0.127897403, 0.128183379,
  0.128189483, 0.129021111, 0.129544016, 0.130756951, 0.130763389, 0.131663649,
  0.13251105, 0.132971228, 0.134387149, 0.137197885, 0.137349233, 0.137349233,
  0.139890296, 0.139890296, 0.142263257, 0.14294479, 0.143181659, 0.143413894,
  0.144646602, 0.145218007, 0.147106756, 0.151563176, 0.155112986, 0.156096264,
  0.15801714, 0.158214669, 0.160013802, 0.160239227, 0.160263601, 0.160440953,
  0.161058585, 0.162630247, 0.162777863, 0.164149222, 0.165191635, 0.166624952,
  0.16668302, 0.167583008, 0.167583008, 0.171113872, 0.175135739, 0.175435628,
  0.176146737, 0.176209166, 0.178565193, 0.178565193, 0.178917278, 0.17933613,
  0.180027941, 0.183086112, 0.184390626, 0.185964189, 0.186592779, 0.188454153,
  0.188481897, 0.188481897, 0.1889054, 0.190121974, 0.190805236, 0.191053681,
  0.191387805, 0.194013337, 0.194771514, 0.196209091, 0.197271614, 0.199944036,
  0.201081645, 0.201888313, 0.202700639, 0.203684371, 0.203685278, 0.204740094,
  0.207229095, 0.208260332, 0.212283207, 0.213131836, 0.216006529, 0.216006529,
  0.216434523, 0.217491224, 0.218550033, 0.220698489, 0.221507086, 0.222609112,
  0.224103661, 0.227708476, 0.234729596, 0.237209995, 0.237209995, 0.239975767,
  0.240310432, 0.241098128, 0.242277573, 0.244667537, 0.244794033, 0.246018851,
  0.246663586, 0.24673643, 0.247204597, 0.247745684, 0.249267397, 0.251032708,
  0.251245568, 0.251360498, 0.253079708, 0.253095919, 0.255398881, 0.255896745,
  0.262794991, 0.263413935, 0.265194648, 0.269696661, 0.270006689, 0.270374413,
  0.270425825, 0.27301537, 0.273514136, 0.273730638, 0.276957133, 0.277634073,
  0.277826846, 0.278461506, 0.278462073, 0.279744753, 0.279800022, 0.282325232,
  0.291875792, 0.291974718, 0.292180979, 0.292180979, 0.293959305, 0.294401079,
  0.295728462, 0.296621616, 0.296790841, 0.299332732, 0.302106952, 0.302132577,
  0.30599027, 0.30666919, 0.309242994, 0.310723525, 0.310730091, 0.311681346,
  0.316939042, 0.318675275, 0.323496629, 0.324924323, 0.327181793, 0.32734305,
  0.327508838, 0.327575702, 0.330554035, 0.33135257, 0.331922377, 0.332450018,
  0.332899245, 0.333034381, 0.335225544, 0.337406809, 0.33899395, 0.33899395,
  0.339162817, 0.340110398, 0.341187308, 0.342868321, 0.342868321, 0.34545952,
  0.349645188, 0.351494913, 0.357010565, 0.359411399, 0.360071075, 0.360483613,
  0.366321316, 0.366438124, 0.370133731, 0.370832836, 0.3720443, 0.373494895,
  0.373494895, 0.375364782, 0.375561028, 0.37616805, 0.376639478, 0.377152617,
  0.377344194, 0.378791243, 0.381011708, 0.382145659, 0.385644213, 0.386471571,
  0.386552889, 0.392443112, 0.398865689, 0.400237845, 0.402718408, 0.405764452,
  0.408334601, 0.408724687, 0.412097762, 0.415055581, 0.415338893, 0.423041172,
  0.423246382, 0.430421765, 0.43712276, 0.439228653, 0.451377773, 0.451630291,
  0.453830748, 0.458966924, 0.46230647, 0.465806848, 0.466377605, 0.468453497,
  0.46910799, 0.476873766, 0.477048953, 0.480191578, 0.483224111, 0.484621931,
  0.498885636, 0.500655975, 0.505550321, 0.511239713, 0.511239713, 0.530709604,
  0.530709604, 0.531208983, 0.538828428, 0.541314736, 0.541314736, 0.546137489,
  0.547822003, 0.556940369, 0.562941319, 0.563045472, 0.564344721, 0.564701636,
  0.571425881, 0.571425881, 0.579269664, 0.600610518, 0.602105423, 0.603127044,
  0.606000154, 0.610765949, 0.612405339, 0.612942215, 0.612942215, 0.620547401,
  0.624633274, 0.633390186, 0.63632993, 0.642906784, 0.644289874, 0.665056056,
  0.665056056, 0.668329281, 0.668329281, 0.672082107, 0.673357889, 0.673794698,
  0.682752216, 0.692247198, 0.695220159, 0.714552867, 0.714552867, 0.71656553,
  0.716713982, 0.73122729, 0.734647126, 0.739369496, 0.746051801, 0.747026761,
  0.747026761, 0.749347937, 0.749347937, 0.750214291, 0.752680796, 0.755946192,
  0.757534668, 0.760965382, 0.776417792, 0.776417792, 0.789269985, 0.803487707,
  0.828034505, 0.828570739, 0.834874829, 0.838702894, 0.840890008, 0.842647454,
  0.846020661, 0.84643909, 0.847824232, 0.85152615, 0.855048332, 0.861846118,
  0.861846118, 0.887973813, 0.89156205, 0.90034266, 0.904590337, 0.907978636,
  0.907978636, 0.909625737, 0.912521038, 0.921357618, 0.922429497, 0.922964443,
  0.92333785, 0.927265232, 0.951668921, 0.956974686, 0.957504942, 0.97787324,
  0.992121379, 1.009215441, 1.012497246, 1.025591746, 1.052977074, 1.05672445,
  1.05879493, 1.065225414, 1.075711546, 1.090346079, 1.095967301, 1.118249623,
  1.125244912, 1.126423281, 1.140092397, 1.15445809, 1.15445809, 1.177607223,
  1.177607223, 1.17897816, 1.204899676, 1.209726746, 1.226666294, 1.235692655,
  1.255723922, 1.272916864, 1.27574584, 1.327609639, 1.343923449, 1.369759181,
  1.382992486, 1.38644434, 1.38644434, 1.419031405, 1.422225429, 1.42667736,
  1.427140607, 1.428596789, 1.445810712, 1.446722722, 1.446722722, 1.456764741,
  1.501811989, 1.508978881, 1.512975485, 1.518322286, 1.521921014, 1.548027227,
  1.548922653, 1.562689953, 1.591521634, 1.687769592, 1.695671457, 1.709250133,
  1.744152851, 1.762748514, 1.816401643, 1.898896132, 1.930563461, 1.937061599,
  1.954249885, 1.973105381, 2.103561161, 2.140259961, 2.147607681, 2.172395373,
  2.193980181, 2.234855033, 2.300526949, 2.353213767, 2.368054776, 2.370352047,
  2.394547474, 2.422347597, 2.437381496, 2.449448122, 2.47587456, 2.486335353,
  2.491428509, 2.517750709, 2.533640386, 2.564625879, 2.609612779, 2.610881487,
  2.646690738, 2.651467891, 2.684453581, 2.718987448, 2.722874929, 2.726543203,
  2.769944762, 2.769944762, 2.778303592, 2.782457749, 2.800551309, 2.803850925,
  2.808503423, 2.810174192, 2.813220291, 2.835813052, 2.839650127, 2.846010929,
  2.84617301, 2.84617301, 2.848533793, 2.850407593, 2.850451526, 2.887168404,
  2.895326116, 2.922371158, 2.93690144, 2.944489962, 2.956529954, 2.983971966,
  2.992278171, 3.045080415, 3.072010826, 3.086910212, 3.086910212, 3.170606119,
  3.23692634, 3.310908476, 3.320979475, 3.383773609, 3.395915292, 3.516766178,
  3.581300347, 3.636831308, 3.693874525, 3.70101876, 3.767817594, 3.817422453,
  3.82464, 3.856009576, 3.896516868, 3.89841672, 3.901225306, 3.98142561,
  4.083457802, 4.110271101, 4.13282978, 4.188360258, 4.196655008, 4.210423137,
  4.215756191, 4.331391506, 4.331391506, 4.373139283, 4.467200817, 4.564773632,
  4.564773632, 4.689688694, 4.689688694, 4.776689086, 4.827081534, 4.95946973,
  5.212567387, 5.22285458, 5.232171771, 5.2668101, 5.2668101, 5.290234752,
  5.29354151, 5.323180523, 5.34899198, 5.486008745, 5.616354571, 5.691387802,
  5.697184586, 5.793130291, 5.80276025, 5.80276025, 5.85715585, 5.889560046,
  5.931608888, 6.004494971, 6.376081796, 6.5097813, 6.714308573, 6.723049883,
  6.752353693, 6.752353693, 7.208924227, 7.276831715, 7.439036353, 7.514489656,
  7.590484444, 7.809137013, 7.835784659, 8.010099953, 8.079222636, 8.132565295,
  8.651587221, 8.670497603, 8.685246016, 8.751976277, 9.022679394, 9.0470051,
  9.251854607, 9.309424597, 9.309424597, 9.403845694, 9.561490572, 9.703821694,
  10.04618638, 10.2221423, 10.24211815, 10.31883513, 10.32102069, 10.36001138,
  10.36001138, 10.65228958, 10.71039783, 10.77783086, 10.82147352, 10.82231763,
  10.82231763, 10.84202153, 10.98003973, 11.38503733, 11.86341349, 12.00999395,
  12.39895679, 12.55418947, 12.55418947, 12.59749639, 12.59749639, 12.81262245,
  12.90441729, 12.93427551, 13.13914973, 13.33022703, 13.35562044, 13.45585564,
  13.45585564, 13.58137113, 13.70116797, 14.22231011, 14.52985413, 14.58382653,
  14.5958529, 14.75733569, 14.85838326, 14.97440503, 15.38604305, 15.55293127,
  15.56809652, 15.96468744, 16.28551749, 16.28551749, 16.87137514, 17.41727687,
  17.55685091, 18.08264853, 18.2722511, 18.41135918, 19.13100011, 19.97856428,
  20.02629203, 20.39345922, 20.63673303, 21.67293708, 21.98908792, 22.92104583,
  22.96095595, 24.58631856, 24.58899629, 24.58899629, 24.72826712, 24.74123618,
  25.63580094, 26.1025254, 26.1025254, 27.2540692, 27.2540692, 27.52165529,
  27.8869401, 30.43957587, 31.17940777, 31.17940777, 31.23121612, 31.71046347,
  32.11373324, 33.1540443, 33.79812475, 34.34667276, 34.34667276, 34.47896787,
  35.45967795, 37.12350103, 37.38666919, 37.84786931, 37.99910083, 38.07551997,
  38.55198339, 39.72141901, 39.72141901, 40.30207632, 41.48230179, 42.82755546,
  42.95879847, 43.80126338, 43.882252, 45.09412297, 45.58381941, 45.58381941,
  46.41493326, 47.62360819, 47.62360819, 47.9704093, 48.09048429, 48.20671615,
  48.20671615, 48.71425958, 50.06375526, 52.75530822, 52.78285381, 52.78285381,
  54.13959661, 55.65493553, 63.98073298, 65.12941967, 65.85246197, 65.85246197,
  65.91009314, 66.1684595, 66.27087712, 66.27087712, 66.29285325, 66.31811768,
  69.41134342, 69.41134342, 73.16035826, 74.36735162, 75.49723521, 76.34305236,
  76.47121531, 77.73282613, 78.721708, 78.721708, 78.89870283, 78.89870283,
  78.92626722, 79.59924562, 79.80778845, 81.34470392, 82.34057688, 82.8201271,
  82.8201271, 84.17661106, 84.17661106, 86.518271, 87.90795162, 91.05639443,
  91.42022232, 96.27453227, 97.53130251, 98.11617406, 99.39648007, 100.1867251,
  100.6384492, 108.1381079, 108.3459774, 109.2292376, 109.2721808, 110.621238,
  111.083248, 115.4812411, 115.5684011, 115.5684011, 115.5915342, 119.5175678,
  122.7562647, 122.7562647, 123.8921837, 123.9593254, 127.9905235, 129.6117598,
  129.6117598, 131.8278655, 140.120305, 145.3746873, 146.5236289, 148.8972379,
  151.2463591, 160.3884905, 160.3884905, 164.3355116, 165.9737193, 169.092763,
  177.7067641, 180.2871756, 182.9994227, 185.9785252, 186.1547975, 186.1547975,
  197.2227217, 197.2227217, 198.631996, 200.6514617, 211.4121605, 212.1727902,
  223.7888318, 224.6385574, 225.8759298, 233.5412075, 240.1674293, 240.1674293,
  242.4670124, 251.9191303, 251.9191303, 255.3231071, 275.045002, 275.6419832,
  278.3995546, 287.1719655, 298.96, 317.6424583, 318.8210218, 324.9689983,
  327.640177, 363.4633713, 365.7145411, 395.6689824, 395.6689824, 407.0266527,
  409.712272, 410.4041603, 412.4712705, 434.487888, 456.9388774, 459.7463631,
  463.7917397, 468.3031069, 470.080664, 474.1585984, 480.6878166, 480.7964827,
  486.3842936, 487.7100792, 555.4363778, 585.6805019, 640.9173371, 647.2857396,
  696.7160321, 697.5880182, 738.1964739, 781.68, 804.2111619, 810.7397119,
  864.5741243, 866.8157021, 869.260273, 885.3840528, 911.2052068, 911.2052068,
  933.5329777, 982.4094687, 994.4035173, 996.2689635, 999.6525228, 1003.428085,
  1005.936249, 1027.556376, 1039.575702, 1072.903493, 1096.44416, 1105.604156,
  1105.604156, 1279.879718, 1282.32, 1292.618574, 1372.640123, 1373.524125,
  1385.000574, 1412.536638, 1479.086411, 1537.596367, 1609.378762, 1661.503321,
  1661.503321, 1845.19818, 1845.19818, 2110.839982, 2110.839982, 2546.727819,
];

//#endregion fake data
