var mongoose = require('mongoose');
const LidarJointSet = require('../models/lidarJointSet.model');

const getBySiteId = async (siteId) => {
  const constSiteId = new mongoose.Types.ObjectId('65b356d89f5a66aefdce5ee8');
  await LidarJointSet.insertMany([
    {
      siteId: constSiteId,
      discontinuitySetId: 1,
      shape: 'irregular',
      dip: 30,
      dipDirection: 120,
      expectationTraceLength: 10,
      spacing: 5,
      fisherK: 1.5,
      frictionAngle: 25,
      fractureIntensity: 'low',
      positionX: 50,
      positionY: 100,
      positionZ: 30,
      numberOfFracture: 20,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 2,
      shape: 'regular',
      dip: 45,
      dipDirection: 90,
      expectationTraceLength: 15,
      spacing: 7,
      fisherK: 2.0,
      frictionAngle: 30,
      fractureIntensity: 'moderate',
      positionX: 60,
      positionY: 110,
      positionZ: 35,
      numberOfFracture: 15,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 3,
      shape: 'irregular',
      dip: 35,
      dipDirection: 150,
      expectationTraceLength: 12,
      spacing: 6,
      fisherK: 1.8,
      frictionAngle: 28,
      fractureIntensity: 'low',
      positionX: 55,
      positionY: 105,
      positionZ: 32,
      numberOfFracture: 18,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 4,
      shape: 'regular',
      dip: 40,
      dipDirection: 100,
      expectationTraceLength: 18,
      spacing: 8,
      fisherK: 2.2,
      frictionAngle: 32,
      fractureIntensity: 'moderate',
      positionX: 65,
      positionY: 115,
      positionZ: 37,
      numberOfFracture: 14,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 5,
      shape: 'irregular',
      dip: 32,
      dipDirection: 130,
      expectationTraceLength: 11,
      spacing: 5.5,
      fisherK: 1.6,
      frictionAngle: 26,
      fractureIntensity: 'low',
      positionX: 52.5,
      positionY: 102.5,
      positionZ: 31.5,
      numberOfFracture: 19,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 6,
      shape: 'regular',
      dip: 42,
      dipDirection: 95,
      expectationTraceLength: 16,
      spacing: 7.5,
      fisherK: 2.1,
      frictionAngle: 31,
      fractureIntensity: 'moderate',
      positionX: 62.5,
      positionY: 112.5,
      positionZ: 36.5,
      numberOfFracture: 16,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 7,
      shape: 'irregular',
      dip: 34,
      dipDirection: 140,
      expectationTraceLength: 13,
      spacing: 6.5,
      fisherK: 1.7,
      frictionAngle: 27,
      fractureIntensity: 'low',
      positionX: 57.5,
      positionY: 107.5,
      positionZ: 33,
      numberOfFracture: 17,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 8,
      shape: 'regular',
      dip: 38,
      dipDirection: 105,
      expectationTraceLength: 17,
      spacing: 7.8,
      fisherK: 2.3,
      frictionAngle: 33,
      fractureIntensity: 'moderate',
      positionX: 67.5,
      positionY: 117.5,
      positionZ: 38,
      numberOfFracture: 13,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 9,
      shape: 'irregular',
      dip: 36,
      dipDirection: 125,
      expectationTraceLength: 14,
      spacing: 6.8,
      fisherK: 1.9,
      frictionAngle: 29,
      fractureIntensity: 'low',
      positionX: 60.5,
      positionY: 110.5,
      positionZ: 34,
      numberOfFracture: 16,
    },
    {
      siteId: constSiteId,
      discontinuitySetId: 10,
      shape: 'regular',
      dip: 44,
      dipDirection: 85,
      expectationTraceLength: 20,
      spacing: 8.2,
      fisherK: 2.5,
      frictionAngle: 35,
      fractureIntensity: 'moderate',
      positionX: 70,
      positionY: 120,
      positionZ: 40,
      numberOfFracture: 12,
    },
  ]);
  const lidarJointSets = await LidarJointSet.find({ siteId });
  if (lidarJointSets) return lidarJointSets;
  throw new Error('Lidar joint sets not found');
};

module.exports = {
  getBySiteId,
};
